//! `SeaORM` Entity, @generated by sea-orm-codegen 1.1.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "activity_data")]
pub struct Model {
	#[sea_orm(primary_key, auto_increment = false)]
	pub anime_id: i32,
	#[sea_orm(primary_key, auto_increment = false)]
	pub server_id: String,
	pub episode: i32,
	pub webhook: String,
	pub name: String,
	pub image: String,
	pub delay: i32,
	pub timestamp: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
	#[sea_orm(
		belongs_to = "super::guild_data::Entity",
		from = "Column::ServerId",
		to = "super::guild_data::Column::GuildId",
		on_update = "Cascade",
		on_delete = "Cascade"
	)]
	GuildData,
}

impl Related<super::guild_data::Entity> for Entity {
	fn to() -> RelationDef {
		Relation::GuildData.def()
	}
}

impl ActiveModelBehavior for ActiveModel {}
